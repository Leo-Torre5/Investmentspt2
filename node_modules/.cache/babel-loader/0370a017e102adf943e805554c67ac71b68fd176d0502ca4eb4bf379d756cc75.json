{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport router from '../router';\nimport { APIService } from '../http/APIService';\nconst apiService = new APIService();\nexport default {\n  name: \"StockList\",\n  data: () => ({\n    stocks: [],\n    validUserName: \"Guest\",\n    showMsg: '',\n    authenticated: false\n  }),\n  mounted() {\n    this.authenticated = localStorage.getItem(\"isAuthenticated\");\n    this.getStocks();\n    this.showMessages();\n  },\n  methods: {\n    showMessages() {\n      if (this.$route.params.msg) {\n        this.showMsg = this.$route.params.msg;\n      }\n    },\n    getStocks() {\n      apiService.getStockList().then(response => {\n        this.stocks = response.data.data;\n        if (localStorage.getItem(\"isAuthenticated\") && JSON.parse(localStorage.getItem(\"isAuthenticated\")) === true) {\n          this.validUserName = JSON.parse(localStorage.getItem(\"log_user\"));\n        }\n      }).catch(error => {\n        if (error.response.status === 401) {\n          localStorage.clear();\n          router.push(\"/auth\");\n        }\n      });\n    },\n    addNewStock() {\n      if (localStorage.getItem(\"isAuthenticated\") && JSON.parse(localStorage.getItem(\"isAuthenticated\")) === true) {\n        router.push('/stock-create');\n      } else {\n        router.push(\"/auth\");\n      }\n    },\n    updateStock(stock) {\n      router.push('/stock-create/' + stock.pk);\n    },\n    deleteStock(stock) {\n      if (confirm(\"Do you really want to delete?\")) {\n        apiService.deleteStock(stock.pk).then(response => {\n          if (response.status === 204) {\n            router.push('/stock-list/deleted/');\n            this.getStocks();\n          }\n        }).catch(error => {\n          if (error.response.status === 401) {\n            localStorage.clear();\n            router.push(\"/auth\");\n          }\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["router","APIService","apiService","name","data","stocks","validUserName","showMsg","authenticated","mounted","localStorage","getItem","getStocks","showMessages","methods","$route","params","msg","getStockList","then","response","JSON","parse","catch","error","status","clear","push","addNewStock","updateStock","stock","pk","deleteStock","confirm"],"sources":["/Users/leothecub/Downloads/assignment3part2-main/investments-fe/src/components/StockList.vue"],"sourcesContent":["<template>\n    <div class=\"container-fluid\">\n        <div class=\"row align-items-center justify-content-center\">\n            <div class=\"col col-12 align-items-center justify-content-center\">\n                <blockquote>\n                    Welcome {{ validUserName }}!\n                    <footer>\n                        <small>\n                            <em>&mdash;Financial Services, your Midwest Financial Services Partner.</em>\n                        </small>\n                    </footer>\n                </blockquote>\n            </div>\n            <div class=\"col-12 col-md-10 col-lg-10 col-12 align-items-center justify-content-center\">\n                <div class=\"alert alert-success\" v-if=\"showMsg === 'new'\">New Stock has been added.</div>\n                <div class=\"alert alert-success\" v-if=\"showMsg === 'update'\">Stock information has been updated.</div>\n                <div class=\"alert alert-success\" v-if=\"showMsg === 'deleted'\">Selected stock has been deleted.</div>\n            </div>\n        </div>\n        <!-- Mobile device view -->\n        <div class=\"d-md-none\" id=\"collapsable-card\" style=\"width: 80%\">\n            <button type=\"button\" class=\"btn btn-primary\" @click=\"addNewStock\">\n                <font-awesome-icon icon=\"plus\"/>\n            </button>\n            <div class=\"card\" v-for=\"stock in stocks\" :key=\"stock.pk\">\n                <div class=\"card-header\" :id=\"'heading' + stock.symbol\">\n                    <button class=\"btn btn-link collapsed\" data-bs-toggle=\"collapse\" :data-bs-target=\"'#collapse' + stock.pk\" \n                        aria-expanded=\"true\" :aria-controls=\"'collapse' + stock.pk\">\n                        <h6 style=\"color: #0275d8; float: left\">{{ stock.symbol }}</h6>\n                    </button>\n                </div>\n                <div :id=\"'collapse' + stock.pk\" class=\"collapse\" data-bs-parent=\"#collapsable-card\">\n                    <div class=\"card-body\">\n                        <p><b>Customer:</b> {{ stock.customer }}</p>\n                        <p><b>Symbol:</b> {{ stock.symbol }}</p>\n                        <p><b>Name:</b> {{ stock.name }}</p>\n                        <p><b>Shares:</b> {{ stock.shares }}</p>\n                        <p><b>Purchase Price:</b> ${{ stock.purchase_price }}</p>\n                        <p><b>Purchase Date:</b> {{ stock.purchase_date }}</p>\n                        <div class=\"btn-group\">\n                            <button @click=\"updateStock(stock)\"><font-awesome-icon icon=\"pencil\"/></button>\n                            <button @click=\"deleteStock(stock)\"><font-awesome-icon icon=\"trash\"/></button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <!-- Non-Mobile device view -->\n        <div class=\"col col-12 col-md-10 d-none d-xl-block d-lg-block d-md-block\">\n            <table class=\"table table-hover\">\n                <thead>\n                    <tr>\n                        <th scope=\"col\">Customer #</th>\n                        <th scope=\"col\">Symbol</th>\n                        <th scope=\"col\">Name</th>\n                        <th scope=\"col\">Shares</th>\n                        <th scope=\"col\">Purchase Price</th>\n                        <th scope=\"col\">Purchase Date</th>\n                        <th scope=\"col\">Update</th>\n                        <th scope=\"col\">Delete</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr v-for=\"stock in stocks\" :key=\"stock.pk\">\n                        <th scope=\"row\">{{ stock.cust_number }}</th>\n                        <td>{{ stock.symbol }}</td>\n                        <td>{{ stock.name }}</td>\n                        <td>{{ stock.shares }}</td>\n                        <td>${{ stock.purchase_price }}</td>\n                        <td>{{ stock.purchase_date }}</td>\n                        <td @click=\"updateStock(stock)\"><button><font-awesome-icon icon=\"pencil\"/></button></td>\n                        <td @click=\"deleteStock(stock)\"><button><font-awesome-icon icon=\"trash\"/></button></td>\n                    </tr>\n                </tbody>\n            </table>\n            <button type=\"button\" class=\"btn btn-primary\" @click=\"addNewStock\">Add New Stock</button>\n        </div>\n    </div>\n</template>\n\n<script>\nimport router from '../router';\nimport { APIService } from '../http/APIService';\nconst apiService = new APIService();\n\nexport default {\n    name: \"StockList\",\n    data: () => ({\n        stocks: [],\n        validUserName: \"Guest\",\n        showMsg: '',\n        authenticated: false\n    }),\n    mounted() {\n        this.authenticated = localStorage.getItem(\"isAuthenticated\");\n        this.getStocks();\n        this.showMessages();\n    },\n    methods: {\n        showMessages() {\n            if (this.$route.params.msg) {\n                this.showMsg = this.$route.params.msg;\n            }\n        },\n        getStocks() {\n            apiService.getStockList().then(response => {\n                this.stocks = response.data.data;\n                if (localStorage.getItem(\"isAuthenticated\") && JSON.parse(localStorage.getItem(\"isAuthenticated\")) === true) {\n                    this.validUserName = JSON.parse(localStorage.getItem(\"log_user\"));\n                }\n            }).catch(error => {\n                if (error.response.status === 401) {\n                    localStorage.clear();\n                    router.push(\"/auth\");\n                }\n            });\n        },\n        addNewStock() {\n            if (localStorage.getItem(\"isAuthenticated\") && JSON.parse(localStorage.getItem(\"isAuthenticated\")) === true) {\n                router.push('/stock-create');\n            } else {\n                router.push(\"/auth\");\n            }\n        },\n        updateStock(stock) {\n            router.push('/stock-create/' + stock.pk);\n        },\n        deleteStock(stock) {\n            if (confirm(\"Do you really want to delete?\")) {\n                apiService.deleteStock(stock.pk).then(response => {\n                    if (response.status === 204) {\n                        router.push('/stock-list/deleted/');\n                        this.getStocks();\n                    }\n                }).catch(error => {\n                    if (error.response.status === 401) {\n                        localStorage.clear();\n                        router.push(\"/auth\");\n                    }\n                });\n            }\n        }\n    }\n};\n</script>\n\n<style>\nbutton {\n    padding: 1rem;\n    border: 0;\n    cursor: pointer;\n}\n</style>\n"],"mappings":";AAiFA,OAAOA,MAAK,MAAO,WAAW;AAC9B,SAASC,UAAS,QAAS,oBAAoB;AAC/C,MAAMC,UAAS,GAAI,IAAID,UAAU,CAAC,CAAC;AAEnC,eAAe;EACXE,IAAI,EAAE,WAAW;EACjBC,IAAI,EAAEA,CAAA,MAAO;IACTC,MAAM,EAAE,EAAE;IACVC,aAAa,EAAE,OAAO;IACtBC,OAAO,EAAE,EAAE;IACXC,aAAa,EAAE;EACnB,CAAC,CAAC;EACFC,OAAOA,CAAA,EAAG;IACN,IAAI,CAACD,aAAY,GAAIE,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC;IAC5D,IAAI,CAACC,SAAS,CAAC,CAAC;IAChB,IAAI,CAACC,YAAY,CAAC,CAAC;EACvB,CAAC;EACDC,OAAO,EAAE;IACLD,YAAYA,CAAA,EAAG;MACX,IAAI,IAAI,CAACE,MAAM,CAACC,MAAM,CAACC,GAAG,EAAE;QACxB,IAAI,CAACV,OAAM,GAAI,IAAI,CAACQ,MAAM,CAACC,MAAM,CAACC,GAAG;MACzC;IACJ,CAAC;IACDL,SAASA,CAAA,EAAG;MACRV,UAAU,CAACgB,YAAY,CAAC,CAAC,CAACC,IAAI,CAACC,QAAO,IAAK;QACvC,IAAI,CAACf,MAAK,GAAIe,QAAQ,CAAChB,IAAI,CAACA,IAAI;QAChC,IAAIM,YAAY,CAACC,OAAO,CAAC,iBAAiB,KAAKU,IAAI,CAACC,KAAK,CAACZ,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,MAAM,IAAI,EAAE;UACzG,IAAI,CAACL,aAAY,GAAIe,IAAI,CAACC,KAAK,CAACZ,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC;QACrE;MACJ,CAAC,CAAC,CAACY,KAAK,CAACC,KAAI,IAAK;QACd,IAAIA,KAAK,CAACJ,QAAQ,CAACK,MAAK,KAAM,GAAG,EAAE;UAC/Bf,YAAY,CAACgB,KAAK,CAAC,CAAC;UACpB1B,MAAM,CAAC2B,IAAI,CAAC,OAAO,CAAC;QACxB;MACJ,CAAC,CAAC;IACN,CAAC;IACDC,WAAWA,CAAA,EAAG;MACV,IAAIlB,YAAY,CAACC,OAAO,CAAC,iBAAiB,KAAKU,IAAI,CAACC,KAAK,CAACZ,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,MAAM,IAAI,EAAE;QACzGX,MAAM,CAAC2B,IAAI,CAAC,eAAe,CAAC;MAChC,OAAO;QACH3B,MAAM,CAAC2B,IAAI,CAAC,OAAO,CAAC;MACxB;IACJ,CAAC;IACDE,WAAWA,CAACC,KAAK,EAAE;MACf9B,MAAM,CAAC2B,IAAI,CAAC,gBAAe,GAAIG,KAAK,CAACC,EAAE,CAAC;IAC5C,CAAC;IACDC,WAAWA,CAACF,KAAK,EAAE;MACf,IAAIG,OAAO,CAAC,+BAA+B,CAAC,EAAE;QAC1C/B,UAAU,CAAC8B,WAAW,CAACF,KAAK,CAACC,EAAE,CAAC,CAACZ,IAAI,CAACC,QAAO,IAAK;UAC9C,IAAIA,QAAQ,CAACK,MAAK,KAAM,GAAG,EAAE;YACzBzB,MAAM,CAAC2B,IAAI,CAAC,sBAAsB,CAAC;YACnC,IAAI,CAACf,SAAS,CAAC,CAAC;UACpB;QACJ,CAAC,CAAC,CAACW,KAAK,CAACC,KAAI,IAAK;UACd,IAAIA,KAAK,CAACJ,QAAQ,CAACK,MAAK,KAAM,GAAG,EAAE;YAC/Bf,YAAY,CAACgB,KAAK,CAAC,CAAC;YACpB1B,MAAM,CAAC2B,IAAI,CAAC,OAAO,CAAC;UACxB;QACJ,CAAC,CAAC;MACN;IACJ;EACJ;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}