{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport router from '../router';\nimport { APIService } from '../http/APIService';\nconst apiService = new APIService();\nexport default {\n  name: \"CustomerList\",\n  data: () => ({\n    customers: [],\n    validUserName: \"Guest\",\n    customerSize: 0,\n    showMsg: '',\n    isMobile: false,\n    authenticated: false,\n    userID: '',\n    is_superuser: false,\n    headers: [{\n      text: 'Customer Number',\n      sortable: false,\n      align: 'left'\n    }, {\n      text: 'Name',\n      sortable: false,\n      align: 'left'\n    }, {\n      text: 'Address',\n      sortable: false,\n      align: 'left'\n    }, {\n      text: 'City',\n      sortable: false,\n      align: 'left'\n    }, {\n      text: 'State',\n      sortable: false,\n      align: 'left'\n    }, {\n      text: 'ZipCode',\n      sortable: false,\n      align: 'left'\n    }, {\n      text: 'Email',\n      sortable: false,\n      align: 'left'\n    }, {\n      text: 'Phone',\n      sortable: false,\n      align: 'left'\n    }, {\n      text: 'Agent',\n      sortable: false,\n      align: 'left'\n    }, {\n      text: 'Update',\n      sortable: false,\n      align: 'left'\n    }, {\n      text: 'Delete',\n      sortable: false,\n      align: 'left'\n    }]\n  }),\n  mounted() {\n    this.authenticated = localStorage.getItem(\"isAuthenticated\");\n    this.is_superuser = localStorage.getItem(\"is_superuser\");\n    this.validUserName = localStorage.getItem(\"username\");\n    this.userID = Number(localStorage.getItem(\"userID\"));\n    this.getCustomers();\n    this.showMessages();\n  },\n  methods: {\n    onResize() {\n      if (window.innerWidth > 600) this.isMobile = false;else this.isMobile = true;\n    },\n    showMessages() {\n      if (this.$route.params.msg) {\n        this.showMsg = this.$route.params.msg;\n      }\n    },\n    getCustomers() {\n      apiService.getCustomerList().then(response => {\n        this.customers = response.data.data;\n        this.customerSize = this.customers.length;\n      }).catch(error => {\n        if (error.response.status === 401) {\n          localStorage.clear();\n          router.push(\"/auth\");\n        }\n      });\n    },\n    addNewCustomer() {\n      if (localStorage.getItem(\"isAuthenticated\") && JSON.parse(localStorage.getItem(\"isAuthenticated\")) === true) {\n        router.push('/customer-create');\n      } else {\n        router.push(\"/auth\");\n      }\n    },\n    updateCustomer(customer) {\n      router.push('/customer-create/' + customer.pk);\n    },\n    deleteCustomer(customer) {\n      if (confirm(\"Do you really want to delete?\")) {\n        apiService.deleteCustomer(customer.pk).then(response => {\n          if (response.status === 204) {\n            router.push('/customer-list/deleted/');\n            this.getCustomers();\n          }\n        }).catch(error => {\n          if (error.response.status === 401) {\n            localStorage.clear();\n            router.push(\"/auth\");\n          }\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["router","APIService","apiService","name","data","customers","validUserName","customerSize","showMsg","isMobile","authenticated","userID","is_superuser","headers","text","sortable","align","mounted","localStorage","getItem","Number","getCustomers","showMessages","methods","onResize","window","innerWidth","$route","params","msg","getCustomerList","then","response","length","catch","error","status","clear","push","addNewCustomer","JSON","parse","updateCustomer","customer","pk","deleteCustomer","confirm"],"sources":["/Users/leothecub/PycharmProjects/pythonActivities/investments-fe2/src/components/CustomerList.vue"],"sourcesContent":["<template> \n\n    <div class=\"container-fluid\"> \n\n        <div class=\"row align-items-center justify-content-center\"> \n\n            <div class=\"col col-12 align-items-center justify-content-center\"> \n\n                <blockquote> \n\n                    Welcome {{ validUserName }}! \n\n                    <footer> \n\n                        <small> \n\n                            <em>&mdash;Financial Services, your Midwest Financial Services Partner.</em> \n\n                        </small> \n\n                    </footer> \n\n                </blockquote> \n\n            </div> \n\n            <div class=\"col-12 col-md-10 col-lg-10 col-12 align-items-center justify-content-center\"> \n\n                <div class=\"alert alert-success\" \n\n                     v-if=\"showMsg === 'new'\" \n\n                     :value=\"true\"> \n\n                    New customer has been added. \n\n                </div> \n\n                <div class=\"alert alert-success\" \n\n                     v-if=\"showMsg === 'update'\" \n\n                     :value=\"true\"> \n\n                    Customer information has been updated. \n\n                </div> \n\n                <div class=\"alert alert-success\" \n\n                     v-if=\"showMsg === 'deleted'\" \n\n                     :value=\"true\"> \n\n                    Selected customer has been deleted. \n\n                </div> \n\n            </div> \n\n        </div>         \n\n        <!--Mobile device view--> \n\n        <div class=\"d-md-none\" id=\"collapsable-card\" style=\"width: 80%\"> \n\n                <button type=\"button\" class=\"btn btn-primary\" @click=\"addNewCustomer\"> \n\n                    <font-awesome-icon icon=\"plus\"/> \n\n                </button> \n\n                <div class=\"card\" v-for=\"customer in customers\" v-bind:key=\"customer\"> \n\n                    <div class=\"card-header\" :id=\"'heading' + customer.cust_number\"> \n\n                        <button class=\"btn btn-link collapsed\" data-bs-toggle=\"collapse\" :data-bs-target=\"'#collapse' + customer.pk\"  \n\n                        aria-expanded=\"true\" :aria-controls=\"'collapse' + customer.pk\"> \n\n                            <h6 style=\"color: #0275d8; float: left\">{{customer.name}}</h6> \n\n                        </button> \n\n                    </div> \n\n \n\n                    <div :id=\"'collapse' + customer.pk\" class=\"collapse\" :aria-labelledby=\"'heading' + customer.pk\" data-bs-parent=\"#collapsable-card\"> \n\n                        <div class=\"card-body\"> \n\n                            <p><b>Name:</b> {{customer.name}}</p> \n\n                            <p><b>Customer Number:</b>{{ customer.cust_number }}</p> \n\n                            <p><b>Address:</b> {{customer.address}},{{ customer.city }}, \n\n                            {{ customer.state }}, {{ customer.zipcode }}</p> \n\n                            <p><b>Email:</b> {{customer.email}}</p> \n\n                            <p><b>Phone:</b> {{customer.cell_phone}}</p> \n\n                            <p><b>Agent:</b> {{customer.agent}}</p> \n\n                            <div v-if=\"(this.userID === customer.agent || this.is_superuser === 'true')\" class=\"btn-group\"> \n\n                                <button  @click=\"updateCustomer(customer)\" style=\"background-color: transparent; padding: 5;\"> \n\n                                    <font-awesome-icon icon=\"pencil\"/></button> \n\n                                <button @click=\"deleteCustomer(customer)\" style=\"background-color: transparent; padding: 5;\"> \n\n                                    <font-awesome-icon icon=\"trash\"/></button> \n\n                            </div> \n\n                            <div v-else class=\"btn-group\"> \n\n                                <button style=\"background-color: transparent; padding: 0;\" disabled> \n\n                                    <font-awesome-icon icon=\"pencil\"/></button> \n\n                                <button style=\"background-color: transparent; padding: 0;\" disabled> \n\n                                    <font-awesome-icon icon=\"trash\"/></button> \n\n                            </div> \n\n                        </div> \n\n                    </div> \n\n                </div> \n\n            </div> \n\n            <!--non-Mobile device view--> \n\n            <div class=\"col col-12 col-md-10 d-none d-xl-block d-lg-block d-md-block\"> \n\n                <table class=\"table table-hover\" style=\"overflow-y: auto\" \n\n                       :headers=\"headers\"> \n\n                    <thead> \n\n                    <tr> \n\n                        <th scope=\"col\">Customer #</th> \n\n                        <th scope=\"col\">Name</th> \n\n                        <th scope=\"col\">Address</th> \n\n                        <th scope=\"col\">City</th> \n\n                        <th scope=\"col\">State</th> \n\n                        <th scope=\"col\">Zip Code</th> \n\n                        <th scope=\"col\">Email</th> \n\n                        <th scope=\"col\">Phone</th> \n\n                        <th scope=\"col\">Agent</th> \n\n                        <th scope=\"col\">Update</th> \n\n                        <th scope=\"col\">Delete</th> \n\n                    </tr> \n\n                    </thead> \n\n                    <tbody> \n\n                    <tr v-for = \"customer in customers\" v-bind:key=\"customer\"> \n\n                        <th scope=\"row\">{{customer.cust_number}}</th> \n\n                        <td>{{customer.name}}</td> \n\n                        <td>{{customer.address}}</td> \n\n                        <td>{{customer.city}}</td> \n\n                        <td>{{customer.state}}</td> \n\n                        <td>{{customer.zipcode}}</td> \n\n                        <td>{{customer.email}}</td> \n\n                        <td>{{customer.cell_phone}}</td> \n\n                        <td>{{customer.agent }}</td> \n\n                        <td v-if=\"(this.userID === customer.agent || this.is_superuser === 'true')\" \n\n                         @click=\"updateCustomer(customer)\"> \n\n                            <button style=\"background-color: transparent; padding: 5;\"> \n\n                            <font-awesome-icon icon=\"pencil\"/></button> \n\n                        </td> \n\n                        <td v-else> \n\n                            <button style=\"background-color: transparent; padding: 5;\" disabled> \n\n                            <font-awesome-icon icon=\"pencil\"/></button> \n\n                        </td> \n\n                        <td v-if=\"(this.userID === customer.agent || this.is_superuser === 'true')\" \n\n                         @click=\"deleteCustomer(customer)\"> \n\n                            <button style=\"background-color: transparent; padding: 5;\"> \n\n                            <font-awesome-icon icon=\"trash\"/></button> \n\n                        </td> \n\n                        <td v-else> \n\n                            <button style=\"background-color: transparent; padding: 5;\" disabled> \n\n                            <font-awesome-icon icon=\"trash\"/></button> \n\n                        </td> \n\n                    </tr> \n\n                    </tbody> \n\n                </table> \n\n                <!-- Only allow add of customer when authenticated user --> \n\n                <div v-if=\"this.authenticated === 'true'\"> \n\n                    <button type=\"button\" class=\"btn btn-primary\" @click=\"addNewCustomer\">Add New Customer</button> \n\n                </div> \n\n            </div> \n\n        </div> \n\n</template> \n\n<script> \n\n    import router from '../router'; \n\n    import {APIService} from '../http/APIService'; \n\n    const apiService = new APIService(); \n\n \n\n    export default { \n\n        name: \"CustomerList\", \n\n        data: () => ({ \n\n            customers: [], \n\n            validUserName: \"Guest\", \n\n            customerSize: 0, \n\n            showMsg: '', \n\n            isMobile: false, \n\n            authenticated: false, \n\n            userID: '', \n\n            is_superuser: false, \n\n            headers: [ \n\n                {text: 'Customer Number', sortable: false, align: 'left',}, \n\n                {text: 'Name', sortable: false, align: 'left',}, \n\n                {text: 'Address', sortable: false, align: 'left',}, \n\n                {text: 'City', sortable: false, align: 'left',}, \n\n                {text: 'State', sortable: false, align: 'left',}, \n\n                {text: 'ZipCode', sortable: false, align: 'left',}, \n\n                {text: 'Email', sortable: false, align: 'left',}, \n\n                {text: 'Phone', sortable: false, align: 'left',}, \n\n                {text: 'Agent', sortable: false, align: 'left',}, \n\n                {text: 'Update', sortable: false, align: 'left',}, \n\n                {text: 'Delete', sortable: false, align: 'left',} \n\n            ], \n\n        }), \n\n        mounted() { \n\n            this.authenticated = localStorage.getItem(\"isAuthenticated\") \n\n            this.is_superuser = localStorage.getItem(\"is_superuser\"); \n\n            this.validUserName = localStorage.getItem(\"username\"); \n\n            this.userID = Number(localStorage.getItem(\"userID\")); \n\n  \n\n            this.getCustomers(); \n\n            this.showMessages(); \n\n        }, \n\n        methods: { \n\n            onResize() { \n\n                if (window.innerWidth > 600) \n\n                    this.isMobile = false; \n\n                else \n\n                    this.isMobile = true; \n\n            }, \n\n            showMessages(){ \n\n                if (this.$route.params.msg) { \n\n                    this.showMsg = this.$route.params.msg; \n\n                } \n\n            }, \n\n            getCustomers() { \n\n                apiService.getCustomerList().then(response => { \n\n                    this.customers = response.data.data; \n\n                    this.customerSize = this.customers.length; \n\n                }).catch(error => { \n\n                    if (error.response.status === 401) { \n\n                        localStorage.clear(); \n\n                        router.push(\"/auth\"); \n\n                    } \n\n                }); \n\n            }, \n\n            addNewCustomer() { \n\n                if (localStorage.getItem(\"isAuthenticated\") \n\n                    && JSON.parse(localStorage.getItem(\"isAuthenticated\")) === true) { \n\n                    router.push('/customer-create'); \n\n                } else { \n\n                    router.push(\"/auth\"); \n\n                } \n\n            }, \n\n            updateCustomer(customer) { \n\n                router.push('/customer-create/' + customer.pk); \n\n            }, \n\n            deleteCustomer(customer) { \n\n                if(confirm(\"Do you really want to delete?\")) { \n\n                    apiService.deleteCustomer(customer.pk).then(response => { \n\n                        if (response.status === 204) { \n\n                            router.push('/customer-list/deleted/') \n\n                            this.getCustomers() \n\n                        } \n\n                    }).catch(error => { \n\n                        if (error.response.status === 401) { \n\n                            localStorage.clear(); \n\n                            router.push(\"/auth\"); \n\n                        } \n\n                    }); \n\n                } \n\n            },  \n\n        } \n\n    }; \n\n</script> \n\n<style> \n\n    button { \n\n        padding: 1rem; \n\n        border: 0; \n\n        cursor: pointer; \n\n    } \n\n</style> \n\n \n\n "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}